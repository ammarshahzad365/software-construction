package lab7;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class StringPermutations {
	public static void main(String[] args) {
        String input = "ammar";  // You can change the input to test
        List<String> permutations = generatePermutations(input);

        System.out.println("Permutations of \"" + input + "\": " + permutations);
    }

    // Method to generate all permutations of a given string
    public static List<String> generatePermutations(String str) {
        List<String> result = new ArrayList<>();
        if (str == null || str.length() == 0) {
            return result;
        }
        permute(str, 0, str.length() - 1, result);
        return result;
    }

    // Recursive function to generate permutations
    private static void permute(String str, int left, int right, List<String> result) {
        if (left == right) {
            result.add(str);
        } else {
            for (int i = left; i <= right; i++) {
                str = swap(str, left, i);
                permute(str, left + 1, right, result);
                str = swap(str, left, i);  // Backtrack to original configuration
            }
        }
    }

    // Helper method to swap characters in a string
    private static String swap(String str, int i, int j) {
        char[] chars = str.toCharArray();
        char temp = chars[i];
        chars[i] = chars[j];
        chars[j] = temp;
        return new String(chars);
    }
}
